#!/bin/bash
# build-dashboard.sh
# Script to build the dashboard and integrate it with the backend

# Stop on errors
set -e

# Configuration
DASHBOARD_DIR="dashboard"
OUTPUT_DIR="$DASHBOARD_DIR/dist"
ENV_FILE=".env.production.local"

# Default to development mode if not specified
if [ -z "$NODE_ENV" ]; then
  NODE_ENV="development"
fi

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Print section headers
section() {
  echo -e "\n${YELLOW}==== $1 ====${NC}\n"
}

# Check if we're in the right directory
if [ ! -f "api.py" ]; then
  echo -e "${RED}Error: Run this script from the project root directory${NC}"
  exit 1
fi

# Create dashboard directory if it doesn't exist
if [ ! -d "$DASHBOARD_DIR" ]; then
  section "Creating dashboard directory"
  mkdir -p "$DASHBOARD_DIR"
  echo -e "${GREEN}Created $DASHBOARD_DIR directory${NC}"
fi

# Setup the dashboard project if not already initialized
if [ ! -f "$DASHBOARD_DIR/package.json" ]; then
  section "Setting up new dashboard project"
  
  # Check if npm is installed
  if ! command -v npm &> /dev/null; then
    echo -e "${RED}Error: npm is required but not installed.${NC}"
    exit 1
  fi
  
  cd "$DASHBOARD_DIR"
  
  # Create a new React project with Vite
  npm create vite@latest . -- --template react-ts
  
  # Install dependencies
  npm install
  
  cd ..
  echo -e "${GREEN}Dashboard project initialized${NC}"
fi

# Create environment file if it doesn't exist
if [ ! -f "$DASHBOARD_DIR/$ENV_FILE" ]; then
  section "Creating environment configuration"
  
  # Check if config file exists
  CONFIG_FILE="config/$NODE_ENV.json"
  if [ ! -f "$CONFIG_FILE" ]; then
    echo -e "${RED}Error: Configuration file $CONFIG_FILE not found${NC}"
    exit 1
  fi
  
  # Extract API key from config if available
  API_KEY=$(grep -o '"auth_token"[[:space:]]*:[[:space:]]*"[^"]*"' "$CONFIG_FILE" | grep -o '"[^"]*"$' | tr -d '"')
  
  # Create environment file
  cat > "$DASHBOARD_DIR/$ENV_FILE" << EOF
# Generated by build-dashboard.sh on $(date)
# Production environment configuration

# API Configuration
VITE_API_BASE_URL=/
VITE_API_TIMEOUT=60000

# Authentication Configuration
VITE_USE_JWT_AUTH=true
# Only used if USE_JWT_AUTH is false
VITE_API_KEY=$API_KEY

# File Upload Configuration
VITE_MAX_FILE_SIZE=100000000
VITE_ACCEPTED_FILE_TYPES=.csv,.xls,.xlsx
VITE_UPLOAD_CHUNK_SIZE=2000000

# UI Configuration
VITE_DEFAULT_THEME=system
VITE_SIDEBAR_COLLAPSED=true
VITE_DASHBOARD_REFRESH=0

# Feature Flags
VITE_ENABLE_USER_MANAGEMENT=true
VITE_ENABLE_DARK_MODE=true
VITE_ENABLE_LOGGING=true

# Environment
NODE_ENV=production
EOF
  
  echo -e "${GREEN}Created environment file: $DASHBOARD_DIR/$ENV_FILE${NC}"
fi

# Build the dashboard
section "Building dashboard for $NODE_ENV environment"
cd "$DASHBOARD_DIR"

# Install dependencies if needed
if [ "$1" == "--install" ]; then
  echo "Installing dependencies..."
  npm install
fi

# Build the app
echo "Building dashboard..."
npm run build

cd ..
echo -e "${GREEN}Dashboard built successfully${NC}"

# Check if the output directory exists
if [ ! -d "$OUTPUT_DIR" ]; then
  echo -e "${RED}Error: Build failed - output directory $OUTPUT_DIR not found${NC}"
  exit 1
fi

section "Dashboard Build Complete"
echo -e "The dashboard has been built and is ready to be served by the API."
echo -e "To run the API server and serve the dashboard:"
echo -e "${GREEN}uvicorn api:app --host 0.0.0.0 --port 8000${NC}"
echo -e "\nAccess the dashboard at: http://localhost:8000"